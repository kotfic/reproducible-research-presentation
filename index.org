#+Title: Reproducible research: open access, open data, open tools and metrics
#+Author: Christopher Kotfila
#+Email: ckotfila@albany.edu
#+OPTIONS: toc:nil num:nil

#+REVEAL_ROOT: revealjs/
#+REVEAL_HLEVEL: 1

* Introduction
Christopher Kotfila\\
PhD student - Information Science Department\\
College of Computing and Information\\
ckotfila@albany.edu \\
@kotfic
** Who Am I?
#+BEGIN_NOTES
Graduated last spring with an MSIS from here at UAlbany

Focused primarily on scholarly communication and open access

Last 10 years -amature/professional software developer

both in private sector doing web application development

and in academia as a research assistant.
#+END_NOTES
** That's a long title
Are you really going to talk about all that in 30 minutes?

#+BEGIN_NOTES
So the answer of course is no.

This talk is going to focus on reproducible research

cast it in the light of some problems that software engineers have been facing for a number of years

and then really what I'm really hoping is that I'll get a chance to show you some really cool tools that have emerged in the last 5 to 10 years

and then talk about how these tools related to open access and open data. 
#+END_NOTES

** Caveat 
#+BEGIN_QUOTE
"Release early release often"[1]
#+END_QUOTE
[1] Eric S. Raymond, The Cathedral and the Bazaar (1997)

#+BEGIN_NOTES
So there is a relatively well established philosophy in software development "Release early release often"

In software this means,  get your program out there as soon as possible and let people start giving you feedback

This presentation emerges from a number of threads that have been stewing for the last couple of years

The ideas here are still a little rough,  in true Open Source fashion,  I hope you'll help me refine them. 

#+END_NOTES
* An Example from personal experience
#+BEGIN_NOTES
So - I began working as a research assistant here at Albany at the beginning of this summer

The work I'm learning to do involves writing computer programs to to pull structured information out of unstructured medical discharge summaries.  

There are a lot of interesting and practical applications for work like this

tracking patient outcomes for instance

identifying systematic issues at hospitals or with health care processes - lots of stuff.

This is done primarily with natural language process tools (ie.  computer programs and processes) 

As an initial exercize I set out to reproduce a well performing system in a particular challenge that tried to identify whether patients had obesity based on the free-form text in their medical record.

#+END_NOTES
* The idea was...
** reproduce the system based on the description in the paper,

** try to identify any systematic errors the system made

** correct those errors

** publish in a prestigious journal

** get a tenure-track position at a respected university

** live happily ever afer

* So It turns out...
#+BEGIN_NOTES
So it turns out this wasn't a very good plan - 

I spent about a month trying to reproduce the system from the paper - too many variables, too much complexity

Finally in desperation I emailed the original authors, while they were extreamly helpful - the original system couldn't be found. 

They had moved to a different institution

It was simply no longer accessable.

So now there is this system documentation- this paper- that describes a well performing system- 

but the system, the solution in its most tangible form is gone.

#+END_NOTES

* A state of "Crisis"
+ Begley, C. Glenn and Ellis, Lee M. Drug development: Raise standards for preclinical cancer research, Nature (2012)
+ AAAS (2011). AAAS annual meeting: Workshop on the digitization of science: Repro-ducibility and interdisciplinary knowledge transfer.
+ AMP (2011). Applied mathematics perspectives workshop on reproducible research: Toolsand strategies for scientific computing applied mathematics perspectives.
+ SIAM-CSE (2011). SIAM conference on computational science & engineering workshop onverifiable, reproducible computational science.
+ SIAM-Geo (2011). SIAM geosciences workshop on reproducible science and open-sourcesoftware in the geosciences
+ NSF (2010). National science foundation workshop on changing the conduct of science inthe information age summary.
+ ENAR (2011). Research ethics in biostatistics: Invited panel discussion at ENAR 2011 onthe biostatistician’s role in reproducible research.
+ Yale Law School Round Table on Data and Code Sharing (2009)

#+BEGIN_NOTES
This is the so called "Crisis of reproducibility" 
#+END_NOTES


* Reproducibility

* 
[[file:img/402px-1665_phil_trans_vol_i_title.png]]

#+BEGIN_NOTES
Reproducibility is not a new concept - 
#+END_NOTES
** TODO Notes about early goals of reproducability
Printing press is the technology that enables the goals of reproducability (as Shirky poitns out - some 150 years later)
Internet and modern computing is the technology that creates the current threat to the =Credability= of the research process
But Technology can also help to solve the problem it is creating.

* 
#+BEGIN_QUOTE
“The idea is: An article about computational science in a scientific
publication is not the scholarship itself, it is merely advertising of the
scholarship. The actual scholarship is the complete ... set of
instructions [and data] which generated the figures.”
David Donoho, 1998.
#+END_QUOTE


* Software Developers and Researchers 
(have a lot in common)
** Highly specialized
** Experts in their area
** Collaborate frequently
Usually working on teams that are \\
geographically disparate  \\ 
culturally diverse
** Produce complex processes that 
+ obtain, 
+ scrub, 
+ explore, 
+ model 
+ and interpret data.

* Code and Documentation
#+BEGIN_NOTES
For software developers documentation tends to take a back seat to code 

For researchers code (and data processesing) tends to take a back seat to documentation

and by documentation i mean a publishible paper. 


#+END_NOTES


* The Open Science Pipeline 
#+BEGIN_NOTES
Really reproducible research spans all the steps between a data source and a publiction. 

All the steps involved in obtaining,  scrubing, modeling and interpreting the data. 

This doesn't HAVE to be in the context of an open data and open access 

BUT - in this context open reproducible research brings end-to-end transparency to the entire process.

Luckily Reproducibility is (arguably) the number one  concern of software developers.

And they've been building tools to support reproducibility for the last 30 or 40 years. 

#+END_NOTES
+ Open Data
+ Reproducible Research
+ Open Access



* Source Control Management System

** =Who= did =what= =when= and =why=?
* Git and Github
** The details of git and github are not vital to understand importaint right now
** Forking for Fun and Profit
** SCMS are not just for Source Code
https://github.com/blog/1657-introducing-government-github-com

* Executable Papers and Literate Programing
** Examples

#+BEGIN_SRC R :results graphics :file img/graph.png :exports results
# Define 2 vectors
cars <- c(1, 3, 6, 4, 9)
trucks <- c(2, 5, 4, 5, 12)

# Graph cars using a y axis that ranges from 0 to 12
plot(cars, type="o", col="blue", ylim=c(0,12))

# Graph trucks with red dashed line and square points
lines(trucks, type="o", pch=22, lty=2, col="red")

# Create a title with a red, bold/italic font
title(main="Autos", col.main="red", font.main=4)

#+END_SRC


* Oh yeah... The Metrics


* Final Thought


* Parking lot
** Open Access
**** Copyright exists to incentiveze creative works of non-trival effort
**** For scholars, incentive structure for publication is different
**** Attribution still a key factor
**** Prestige infrastructure 
** Software-carpentry
http://software-carpentry.org/
** Science Code Manifesto
http://sciencecodemanifesto.org/
**** Code
All source code written specifically to process data for a published paper must be available to the reviewers and readers of the paper.
**** Copyright
The copyright ownership and license of any released source code must be clearly stated.
**** Citation
Researchers who use or adapt science source code in their research must credit the code’s creators in resulting publications.
**** Credit
Software contributions must be included in systems of scientific assessment, credit, and recognition.
**** Curation
Source code must remain available, linked to related materials, for the useful lifetime of the publication.

** Modern Reproducible research
** Who is doing this?
**** Stanford Group
Jon Claerbout \\
David Donoho
**** Literate Programing
Donald Knuth
**** Bioinformatics and statistically intensive biology
**** Computational Statisticians and the R Community
Friedrich Leisch
**** Emacs and Org-Babel Community
**** Climate Code Foundation
Nick Barnes

#+BEING_NOTES
Relatively new group but with several high profile articles

Guy behind Science Code Manifesto
http://www.nature.com/news/2010/101013/full/467753a.html
#+END_NOTES
**** Elsiver?
http://www.executablepapers.com/




** Linus's Law
"given enough eyeballs, all bugs are shallow"; \\ 
or more formally: \\
"Given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix will be obvious to someone." 
[citeRaymond]

** Government Github

